/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * WindowInfo(*, hwnd: int, title: str, is_top: int, name_of_pid: str | None = None, exe_of_pid: str | None = None)
 * @export
 * @interface WindowInfo
 */
export interface WindowInfo {
    /**
     * 
     * @type {number}
     * @memberof WindowInfo
     */
    hwnd: number;
    /**
     * 
     * @type {string}
     * @memberof WindowInfo
     */
    title: string;
    /**
     * 
     * @type {number}
     * @memberof WindowInfo
     */
    isTop: number;
    /**
     * 
     * @type {string}
     * @memberof WindowInfo
     */
    nameOfPid?: string | null;
    /**
     * 
     * @type {string}
     * @memberof WindowInfo
     */
    exeOfPid?: string | null;
}

/**
 * Check if a given object implements the WindowInfo interface.
 */
export function instanceOfWindowInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "hwnd" in value;
    isInstance = isInstance && "title" in value;
    isInstance = isInstance && "isTop" in value;

    return isInstance;
}

export function WindowInfoFromJSON(json: any): WindowInfo {
    return WindowInfoFromJSONTyped(json, false);
}

export function WindowInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): WindowInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'hwnd': json['hwnd'],
        'title': json['title'],
        'isTop': json['is_top'],
        'nameOfPid': !exists(json, 'name_of_pid') ? undefined : json['name_of_pid'],
        'exeOfPid': !exists(json, 'exe_of_pid') ? undefined : json['exe_of_pid'],
    };
}

export function WindowInfoToJSON(value?: WindowInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'hwnd': value.hwnd,
        'title': value.title,
        'is_top': value.isTop,
        'name_of_pid': value.nameOfPid,
        'exe_of_pid': value.exeOfPid,
    };
}

